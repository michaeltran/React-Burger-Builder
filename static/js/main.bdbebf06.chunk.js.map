{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Auxiliary/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavagationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","to","src","burgerLogo","alt","navigationItem","NavigationItem","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","console","log","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCanceled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","requestInterceptor","interceptors","request","use","req","responseIntereptor","response","res","eject","message","instance","create","baseURL","params","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","push","pathname","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","Fragment","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","burgerBuilder","totalPrice","dispatch","ingName","ingredientName","get","then","data","catch","checkoutSummary","CheckoutSummary","width","margin","onCheckoutCancelled","onCheckoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","address","postalCode","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","checkValidity","rules","isValid","trim","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","path","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","fetchedOrders","err","App","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","action","newOrder","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bdbebf06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1VtcD\",\"BreadTop\":\"BurgerIngredient_BreadTop__22zTj\",\"Seeds1\":\"BurgerIngredient_Seeds1__1xsDo\",\"Seeds2\":\"BurgerIngredient_Seeds2__1Uwbp\",\"Meat\":\"BurgerIngredient_Meat__209cn\",\"Cheese\":\"BurgerIngredient_Cheese__3d7po\",\"Salad\":\"BurgerIngredient_Salad__2DDAe\",\"Bacon\":\"BurgerIngredient_Bacon__Ivsbv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__21MXh\",\"Open\":\"SideDrawer_Open__3L6bQ\",\"Close\":\"SideDrawer_Close__mxbB6\",\"Logo\":\"SideDrawer_Logo__3yg1x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2AnFK\",\"Label\":\"BuildControl_Label__1XTZq\",\"Less\":\"BuildControl_Less__1vTkd\",\"More\":\"BuildControl_More__1iXQR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2qlAy\",\"Label\":\"Input_Label__2DOIe\",\"InputElement\":\"Input_InputElement__3_CPw\",\"Invalid\":\"Input_Invalid__Frf6U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2YTFQ\",\"Logo\":\"Toolbar_Logo__JUIMZ\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3-Sr4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__3JDtA\",\"active\":\"NavigationItem_active__1XlNZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1Mm5k\",\"OrderButton\":\"BuildControls_OrderButton__8nOrc\",\"enable\":\"BuildControls_enable__3zgtT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__14TBj\",\"Success\":\"Button_Success__1M9-C\",\"Danger\":\"Button_Danger__UNgJJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2pPIZ\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2MwmM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3zpQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__191w1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1ax1G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__ERMjh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3e9IE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2buXq\",\"load2\":\"Spinner_load2__FlxFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__16DtP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__36LS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3Gkph\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <Link to=\"/\"><img src={burgerLogo} alt=\"MyBurger\" /></Link>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem.js';\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;\r\n","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo.js';\r\nimport NavigationItems from '../NavigationItems/NavagationItems.js';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle.js';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        {/* <div onClick={props.opened}>MENU</div> */}\r\n        <div className={classes.Logo}>\r\n            <Logo height=\"80%\" />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo.js';\r\nimport NavigationItems from '../../Navigation/NavigationItems/NavagationItems.js';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop.js';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary.js';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../Auxiliary/Auxiliary.js';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar.js';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer.js';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer}\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Layout;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;\r\n\r\n\r\n// import React, {Component} from 'react';\r\n// import classes from './BurgerIngredient.module.css';\r\n\r\n// const BurgerIngredient = (props) => {\r\n//     let ingredient = null;\r\n\r\n//     switch (props.type) {\r\n//         case ('bread-bottom'):\r\n//             ingredient = <div className={classes.BreadBottom}></div>;\r\n//             break;\r\n//         case ('bread-top'):\r\n//             ingredient = (\r\n//                 <div className={classes.BreadTop}>\r\n//                     <div className={classes.Seeds1}></div>\r\n//                     <div className={classes.Seeds2}></div>\r\n//                 </div>\r\n//             );\r\n//             break;\r\n//         case ('meat'):\r\n//             ingredient = <div className={classes.Meat}></div>;\r\n//             break;\r\n//         case ('cheese'):\r\n//             ingredient = <div className={classes.Cheese}></div>;\r\n//             break;\r\n//         case ('bacon'):\r\n//             ingredient = <div className={classes.Bacon}></div>;\r\n//             break;\r\n//         case ('salad'):\r\n//             ingredient = <div className={classes.Salad}></div>;\r\n//             break;\r\n//         default:\r\n//             ingredient = null;\r\n//     }\r\n\r\n//     return ingredient;\r\n// };\r\n\r\n// export default burgerIngredient;","import React from 'react';\r\n\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient.js';\r\n\r\nconst burger = (props) => {\r\n    // console.log(props.ingredients);\r\n    // console.log(Object.keys(props.ingredients));\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\r\n        // console.log(igKey)\r\n        // console.log(props.ingredients[igKey])\r\n        // console.log(...Array(props.ingredients[igKey]))\r\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n            // console.log(igKey)\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n        });\r\n    }).reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients!</p>;\r\n    }\r\n\r\n    // console.log(transformedIngredients);\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\n\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button \r\n            className={classes.Less} \r\n            onClick={props.removed} \r\n            disabled={props.disabled}>Less</button>\r\n        <button \r\n            className={classes.More} \r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl.js';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>${props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label}\r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n        <button \r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary.js';\r\nimport Backdrop from '../Backdrop/Backdrop.js';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentDidUpdate () {\r\n        console.log('[Modal] componentDidUpdate')\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)': 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1': '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }  \r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}\r\n        disabled={props.disabled}>\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary.js';\r\nimport Button from '../../UI/Button/Button.js';\r\n\r\nclass OrderSummary extends Component {\r\n    // This could be a functional component, doesn't have to be a class.\r\n    componentDidUpdate () {\r\n        console.log('[OrderSummary] componentDidUpdate')\r\n    }\r\n\r\n    render () {\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n            .map(igKey => {\r\n                return (\r\n                    <li key={igKey}>\r\n                        <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n                    </li>\r\n                );\r\n            });\r\n\r\n        return (\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to Checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCanceled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n            </Aux>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OrderSummary;","import React from 'react';\r\n\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal.js';\r\nimport Aux from '../Auxiliary/Auxiliary.js';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this.requestInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n\r\n            this.responseIntereptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        state = {\r\n            error: null\r\n        };\r\n\r\n        componentWillUnmount() {\r\n            // console.log('Will Unmount', this.requestInterceptor, this.responseIntereptor);\r\n            axios.interceptors.request.eject(this.requestInterceptor);\r\n            axios.interceptors.response.eject(this.responseIntereptor);\r\n        };\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        };\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-my-burger-4801d.firebaseio.com/',\r\n    params: {}\r\n});\r\n\r\nexport default instance;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Burger from '../../components/Burger/Burger.js';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls.js';\r\nimport Modal from '../../components/UI/Modal/Modal.js';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary.js';\r\nimport Spinner from '../../components/UI/Spinner/Spinner.js';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler.js';\r\nimport * as actions from '../../store/actions/index.js';\r\nimport axios from '../../axios-orders.js';\r\n\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n\r\n    state = {\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n        // axios.get('https://react-my-burger-4801d.firebaseio.com/ingredients.json')\r\n        //     .then(response => {\r\n        //         this.setState({ingredients: response.data});\r\n        //     })\r\n        //     .catch(error => {\r\n        //         this.setState({error: true});\r\n        //     });\r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n        const sum = Object.keys(ingredients).map(igKey => {\r\n            return ingredients[igKey]\r\n        })\r\n        .reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0);\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push({pathname: '/checkout'});\r\n    }\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        }\r\n\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <React.Fragment>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        price={this.props.price} />\r\n                </React.Fragment>\r\n            );\r\n\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n                purchaseCanceled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler} />;\r\n        }\r\n\r\n        // console.log(disabledInfo);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes.js';\r\nimport axios from '../../axios-orders.js';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n}; \r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nconst setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-my-burger-4801d.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n    };\r\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';","import * as actionTypes from './actionTypes.js';\r\nimport axios from '../../axios-orders.js'\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json', orderData)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error));\r\n            });\r\n    };\r\n};\r\n\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = () => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        axios.get('/orders.json')\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            });\r\n    };\r\n};","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger.js';\r\nimport Button from '../../UI/Button/Button.js';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.onCheckoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.onCheckoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('select'):  (\r\n            inputElement = \r\n            <select \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}>\r\n                {props.elementConfig.options.map(option => (\r\n                    <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                ))}\r\n            </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport axios from '../../../axios-orders.js';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button.js';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner.js';\r\nimport classes from './ContactData.module.css';\r\nimport Input from '../../../components/UI/Input/Input.js';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler.js';\r\nimport * as actions from '../../../store/actions/index.js';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            },\r\n        },\r\n        name: '',\r\n        email: '',\r\n        address: {\r\n            street: '',\r\n            postalCode: ''\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        };\r\n\r\n        this.props.onOrderBurger(order);\r\n    }\r\n    \r\n    checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        touched={formElement.config.touched}\r\n                        shouldValidate={formElement.config.validation}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if (this.props.loading) {\r\n            form = <Spinner />;\r\n        }\r\n\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary.js';\r\nimport ContactData from './ContactData/ContactData.js';\r\nimport * as actions from '../../store/actions/index.js';\r\n\r\nclass Checkout extends Component {\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to=\"/\" />;\r\n        \r\n        if (this.props.ings) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary \r\n                        ingredients={this.props.ings}\r\n                        onCheckoutCancelled={this.checkoutCancelledHandler}\r\n                        onCheckoutContinued={this.checkoutContinuedHandler}/>\r\n                    <Route \r\n                        path={this.props.match.path + '/contact-data'} \r\n                        component={ContactData} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);","import React from 'react';\r\n\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n    \r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount:props.ingredients[ingredientName]\r\n        });\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n            style={{\r\n                textTransform: 'capitalize', \r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'}}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: Salad {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order.js';\r\nimport axios from '../../axios-orders.js';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler.js';\r\nimport * as actions from '../../store/actions/index.js';\r\nimport Spinner from '../../components/UI/Spinner/Spinner.js';\r\n\r\nclass Orders extends Component {\r\n    componentDidMount() {\r\n        this.props.onFetchOrders();\r\n    }\r\n\r\n    render () {\r\n        let orders = <Spinner />;\r\n\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order \r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={+order.price} />\r\n            ));\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFetchOrders: () => dispatch(actions.fetchOrders())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout.js';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder.js';\nimport Checkout from './containers/Checkout/Checkout.js';\nimport Orders from './containers/Orders/Orders.js';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes.js';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4.0,\r\n    error: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return  {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                // ingredients: action.ingredients,\r\n                ingredients: {\r\n                    salad: action.ingredients.salad,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat\r\n                },\r\n                totalPrice: initialState.totalPrice,\r\n                error: false\r\n            };\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes.js';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return {\r\n                ...state,\r\n                purchased: false\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            console.log(state)\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id: action.orderId\r\n            };\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.orders,\r\n                loading: false\r\n            }\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder.js';\nimport orderReducer from './store/reducers/order.js';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename='/React-Burger-Builder/'>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}