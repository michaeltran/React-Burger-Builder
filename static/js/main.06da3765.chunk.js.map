{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Auxiliary/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavagationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/order.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","to","src","burgerLogo","alt","navigationItem","NavigationItem","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","isAuth","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","console","log","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCanceled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","requestInterceptor","interceptors","request","use","req","responseIntereptor","response","res","eject","message","instance","create","baseURL","params","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","pathname","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","Fragment","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","actions","checkoutSummary","CheckoutSummary","width","margin","onCheckoutCancelled","onCheckoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","address","postalCode","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","checkValidity","rules","isValid","trim","isEmail","test","isNumeric","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","fetchedOrders","err","Auth","password","isSignup","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onTryAutoSignin","getItem","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","setIngredients","fetchIngredientsFailed","reducer","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06da3765.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1VtcD\",\"BreadTop\":\"BurgerIngredient_BreadTop__22zTj\",\"Seeds1\":\"BurgerIngredient_Seeds1__1xsDo\",\"Seeds2\":\"BurgerIngredient_Seeds2__1Uwbp\",\"Meat\":\"BurgerIngredient_Meat__209cn\",\"Cheese\":\"BurgerIngredient_Cheese__3d7po\",\"Salad\":\"BurgerIngredient_Salad__2DDAe\",\"Bacon\":\"BurgerIngredient_Bacon__Ivsbv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__21MXh\",\"Open\":\"SideDrawer_Open__3L6bQ\",\"Close\":\"SideDrawer_Close__mxbB6\",\"Logo\":\"SideDrawer_Logo__3yg1x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2AnFK\",\"Label\":\"BuildControl_Label__1XTZq\",\"Less\":\"BuildControl_Less__1vTkd\",\"More\":\"BuildControl_More__1iXQR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2qlAy\",\"Label\":\"Input_Label__2DOIe\",\"InputElement\":\"Input_InputElement__3_CPw\",\"Invalid\":\"Input_Invalid__Frf6U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2YTFQ\",\"Logo\":\"Toolbar_Logo__JUIMZ\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3-Sr4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__3JDtA\",\"active\":\"NavigationItem_active__1XlNZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1Mm5k\",\"OrderButton\":\"BuildControls_OrderButton__8nOrc\",\"enable\":\"BuildControls_enable__3zgtT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__14TBj\",\"Success\":\"Button_Success__1M9-C\",\"Danger\":\"Button_Danger__UNgJJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2pPIZ\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2MwmM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3zpQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__191w1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1ax1G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__ERMjh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3e9IE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2buXq\",\"load2\":\"Spinner_load2__FlxFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__16DtP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__36LS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3Gkph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1ciU_\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <Link to=\"/\"><img src={burgerLogo} alt=\"MyBurger\" /></Link>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem.js';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        { props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null }\r\n        { !props.isAuthenticated ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem> : <NavigationItem link=\"/logout\">Logout</NavigationItem> }\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;\r\n","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo.js';\r\nimport NavigationItems from '../NavigationItems/NavagationItems.js';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle.js';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        {/* <div onClick={props.opened}>MENU</div> */}\r\n        <div className={classes.Logo}>\r\n            <Logo height=\"80%\" />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems\r\n                isAuthenticated={props.isAuthenticated} />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo.js';\r\nimport NavigationItems from '../../Navigation/NavigationItems/NavagationItems.js';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop.js';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary.js';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems\r\n                        isAuthenticated={props.isAuthenticated} />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../Auxiliary/Auxiliary.js';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar.js';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer.js';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer}\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Toolbar\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer\r\n                    isAuth={this.props.isAuthenticated}\r\n                    open={this.state.showSideDrawer} \r\n                    closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Layout);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;\r\n\r\n\r\n// import React, {Component} from 'react';\r\n// import classes from './BurgerIngredient.module.css';\r\n\r\n// const BurgerIngredient = (props) => {\r\n//     let ingredient = null;\r\n\r\n//     switch (props.type) {\r\n//         case ('bread-bottom'):\r\n//             ingredient = <div className={classes.BreadBottom}></div>;\r\n//             break;\r\n//         case ('bread-top'):\r\n//             ingredient = (\r\n//                 <div className={classes.BreadTop}>\r\n//                     <div className={classes.Seeds1}></div>\r\n//                     <div className={classes.Seeds2}></div>\r\n//                 </div>\r\n//             );\r\n//             break;\r\n//         case ('meat'):\r\n//             ingredient = <div className={classes.Meat}></div>;\r\n//             break;\r\n//         case ('cheese'):\r\n//             ingredient = <div className={classes.Cheese}></div>;\r\n//             break;\r\n//         case ('bacon'):\r\n//             ingredient = <div className={classes.Bacon}></div>;\r\n//             break;\r\n//         case ('salad'):\r\n//             ingredient = <div className={classes.Salad}></div>;\r\n//             break;\r\n//         default:\r\n//             ingredient = null;\r\n//     }\r\n\r\n//     return ingredient;\r\n// };\r\n\r\n// export default burgerIngredient;","import React from 'react';\r\n\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient.js';\r\n\r\nconst burger = (props) => {\r\n    // console.log(props.ingredients);\r\n    // console.log(Object.keys(props.ingredients));\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\r\n        // console.log(igKey)\r\n        // console.log(props.ingredients[igKey])\r\n        // console.log(...Array(props.ingredients[igKey]))\r\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n            // console.log(igKey)\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n        });\r\n    }).reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients!</p>;\r\n    }\r\n\r\n    // console.log(transformedIngredients);\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\n\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button \r\n            className={classes.Less} \r\n            onClick={props.removed} \r\n            disabled={props.disabled}>Less</button>\r\n        <button \r\n            className={classes.More} \r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl.js';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>${props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label}\r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n        <button \r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>{props.isAuthenticated ? 'ORDER NOW' : 'SIGN-UP TO ORDER'}</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary.js';\r\nimport Backdrop from '../Backdrop/Backdrop.js';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentDidUpdate () {\r\n        console.log('[Modal] componentDidUpdate')\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)': 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1': '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }  \r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}\r\n        disabled={props.disabled}>\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary.js';\r\nimport Button from '../../UI/Button/Button.js';\r\n\r\nclass OrderSummary extends Component {\r\n    // This could be a functional component, doesn't have to be a class.\r\n    componentDidUpdate () {\r\n        console.log('[OrderSummary] componentDidUpdate')\r\n    }\r\n\r\n    render () {\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n            .map(igKey => {\r\n                return (\r\n                    <li key={igKey}>\r\n                        <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n                    </li>\r\n                );\r\n            });\r\n\r\n        return (\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to Checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCanceled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n            </Aux>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OrderSummary;","import React from 'react';\r\n\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal.js';\r\nimport Aux from '../Auxiliary/Auxiliary.js';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this.requestInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n\r\n            this.responseIntereptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        state = {\r\n            error: null\r\n        };\r\n\r\n        componentWillUnmount() {\r\n            // console.log('Will Unmount', this.requestInterceptor, this.responseIntereptor);\r\n            axios.interceptors.request.eject(this.requestInterceptor);\r\n            axios.interceptors.response.eject(this.responseIntereptor);\r\n        };\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        };\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-my-burger-4801d.firebaseio.com/',\r\n    params: {}\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes.js';\r\nimport axios from '../../axios-orders.js'\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error));\r\n            });\r\n    };\r\n};\r\n\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        axios.get('/orders.json?auth=' + token)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            });\r\n    };\r\n};","import * as actionTypes from './actionTypes.js';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return (dispatch) => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    }\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBCEU7nz_UoJeoYIf0D1dpxAYTlACKcctU';\r\n        if (!isSignup) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBCEU7nz_UoJeoYIf0D1dpxAYTlACKcctU';\r\n        }\r\n\r\n        axios.post(url, authData)\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                const expirationDate = new Date(new Date().getTime() + res.data.expiresIn * 1000);\r\n                localStorage.setItem('token', res.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', res.data.localId);\r\n                dispatch(authSuccess(res.data.idToken, res.data.localId));\r\n                dispatch(checkAuthTimeout(res.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response)\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return (dispatch) => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\r\n            }\r\n        }\r\n    };\r\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Burger from '../../components/Burger/Burger.js';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls.js';\r\nimport Modal from '../../components/UI/Modal/Modal.js';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary.js';\r\nimport Spinner from '../../components/UI/Spinner/Spinner.js';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler.js';\r\nimport * as actions from '../../store/actions/index.js';\r\nimport axios from '../../axios-orders.js';\r\n\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n\r\n    state = {\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n        // axios.get('https://react-my-burger-4801d.firebaseio.com/ingredients.json')\r\n        //     .then(response => {\r\n        //         this.setState({ingredients: response.data});\r\n        //     })\r\n        //     .catch(error => {\r\n        //         this.setState({error: true});\r\n        //     });\r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n        const sum = Object.keys(ingredients).map(igKey => {\r\n            return ingredients[igKey]\r\n        })\r\n        .reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0);\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuthenticated) {\r\n            this.setState({purchasing: true});\r\n        } else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push({pathname: '/checkout'});\r\n    }\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        }\r\n\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <React.Fragment>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        price={this.props.price}\r\n                        isAuthenticated={this.props.isAuthenticated} />\r\n                </React.Fragment>\r\n            );\r\n\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n                purchaseCanceled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler} />;\r\n        }\r\n\r\n        // console.log(disabledInfo);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token != null\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes.js';\r\nimport axios from '../../axios-orders.js';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n}; \r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nconst setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-my-burger-4801d.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n    };\r\n};","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger.js';\r\nimport Button from '../../UI/Button/Button.js';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.onCheckoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.onCheckoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('select'):  (\r\n            inputElement = \r\n            <select \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}>\r\n                {props.elementConfig.options.map(option => (\r\n                    <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                ))}\r\n            </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport axios from '../../../axios-orders.js';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button.js';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner.js';\r\nimport classes from './ContactData.module.css';\r\nimport Input from '../../../components/UI/Input/Input.js';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler.js';\r\nimport * as actions from '../../../store/actions/index.js';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            },\r\n        },\r\n        name: '',\r\n        email: '',\r\n        address: {\r\n            street: '',\r\n            postalCode: ''\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        };\r\n\r\n        this.props.onOrderBurger(order, this.props.token);\r\n    }\r\n    \r\n    checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            isValid = pattern.test(value) && isValid;\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /&\\d+$/;\r\n            isValid = pattern.test(value) && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        touched={formElement.config.touched}\r\n                        shouldValidate={formElement.config.validation}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if (this.props.loading) {\r\n            form = <Spinner />;\r\n        }\r\n\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary.js';\r\nimport ContactData from './ContactData/ContactData.js';\r\n\r\nclass Checkout extends Component {\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to=\"/\" />;\r\n        \r\n        if (this.props.ings) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary \r\n                        ingredients={this.props.ings}\r\n                        onCheckoutCancelled={this.checkoutCancelledHandler}\r\n                        onCheckoutContinued={this.checkoutContinuedHandler}/>\r\n                    <Route \r\n                        path={this.props.match.path + '/contact-data'} \r\n                        component={ContactData} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);","import React from 'react';\r\n\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n    \r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount:props.ingredients[ingredientName]\r\n        });\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n            style={{\r\n                textTransform: 'capitalize', \r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'}}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: Salad {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order.js';\r\nimport axios from '../../axios-orders.js';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler.js';\r\nimport * as actions from '../../store/actions/index.js';\r\nimport Spinner from '../../components/UI/Spinner/Spinner.js';\r\n\r\nclass Orders extends Component {\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token);\r\n    }\r\n\r\n    render () {\r\n        let orders = <Spinner />;\r\n\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order \r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={+order.price} />\r\n            ));\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFetchOrders: (token) => dispatch(actions.fetchOrders(token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Input from '../../components/UI/Input/Input.js';\r\nimport Button from '../../components/UI/Button/Button.js';\r\nimport Spinner from '../../components/UI/Spinner/Spinner.js';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index.js';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Email Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n        },\r\n        isSignup: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n    checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            isValid = pattern.test(value) && isValid;\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /&\\d+$/;\r\n            isValid = pattern.test(value) && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    };\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n        this.setState({controls: updatedControls});\r\n    };\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n    };\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isSignup: !prevState.isSignup}\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.controls) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n\r\n        let form = formElementsArray.map(formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                touched={formElement.config.touched}\r\n                shouldValidate={formElement.config.validation}\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n        ));\r\n\r\n        if (this.props.loading) {\r\n            form = <Spinner />;\r\n        }\r\n\r\n        let errorMessage = null;\r\n\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        let authRedirect = null;\r\n        if (this.props.isAuthenticated) {\r\n            authRedirect = <Redirect to={this.props.authRedirectPath}/>;\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button \r\n                    btnType=\"Danger\"\r\n                    clicked={this.switchAuthModeHandler}>SWITCH TO {this.state.isSignup ? 'SIGN-IN': 'SIGN-UP'}</Button>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../store/actions/index.js';\r\n\r\nclass Logout extends Component { \r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\n// import { Route, Switch, withRouter } from 'react-router-dom';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout.js';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder.js';\nimport Checkout from './containers/Checkout/Checkout.js';\nimport Orders from './containers/Orders/Orders.js';\nimport Auth from './containers/Auth/Auth.js';\nimport Logout from './containers/Auth/Logout/Logout.js';\nimport * as actions from './store/actions/index.js';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignin();\n  }\n\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAutoSignin: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n// export default withRouter(connect(null, mapDispatchToProps)(App));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes.js';\r\nimport { updateObject } from '../utility.js';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4.0,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    };\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    };\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: initialState.totalPrice,\r\n        error: false,\r\n        building: false\r\n    });\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, {\r\n        error: true\r\n    });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return addIngredient(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return setIngredients(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return fetchIngredientsFailed(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes.js';\r\nimport { updateObject } from '../utility.js';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, {\r\n        purchased: false\r\n    });\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true\r\n    });\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, {\r\n        id: action.orderId\r\n    });\r\n    return updateObject(state, {\r\n        loading: false,\r\n        purchased: true,\r\n        orders: state.orders.concat(newOrder)\r\n    });\r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true\r\n    });\r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return purchaseInit(state, action);\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return purchaseBurgerStart(state, action);\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            return purchaseBurgerSuccess(state, action);\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return purchaseBurgerFail(state, action);\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return fetchOrdersStart(state, action);\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return fetchOrdersSuccess(state, action);\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return fetchOrdersFail(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes.js';\r\nimport { updateObject } from '../utility.js';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: true\r\n    });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null\r\n    });\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {\r\n        authRedirectPath: action.path\r\n    }); \r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n            return setAuthRedirectPath(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder.js';\nimport orderReducer from './store/reducers/order.js';\nimport authReducer from './store/reducers/auth.js';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename='/React-Burger-Builder/'>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}